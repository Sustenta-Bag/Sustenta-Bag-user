name: "An√°lise de Vulnerabilidades Flutter"

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    - cron: '0 0 * * 1'  # Executa √† meia-noite nas segundas-feiras

jobs:
  flutter-security-audit:
    name: Auditoria de Seguran√ßa Flutter
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/sustenta_bag_application
    
    steps:
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v3
        
      - name: Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.3'
          channel: 'stable'
          
      - name: Instalar depend√™ncias
        run: flutter pub get
        
      - name: Verificar vulnerabilidades com dependency_validator
        run: |
          echo "### Instalando ferramentas de an√°lise" >> $GITHUB_STEP_SUMMARY
          flutter pub global activate dependency_validator
          
          echo "### Verificando depend√™ncias com dependency_validator" >> $GITHUB_STEP_SUMMARY
          flutter pub global run dependency_validator:dependency_validator || true
          
          echo "### Verificando vulnerabilidades do Package Verifier API" >> $GITHUB_STEP_SUMMARY
          flutter pub global activate pana
          flutter pub global run pana . --json > pana-report.json || true
          
          # Extrair informa√ß√µes de depend√™ncias
          cat pana-report.json | grep -o '"has_newer_version"' | wc -l > vuln_count.txt
          OUTDATED_COUNT=$(cat vuln_count.txt)
          
          echo "Resultados da an√°lise:" >> $GITHUB_STEP_SUMMARY
          echo "- Pacotes desatualizados: $OUTDATED_COUNT" >> $GITHUB_STEP_SUMMARY
          
          if [ $OUTDATED_COUNT -gt 0 ]; then
            echo "‚ö†Ô∏è **Aten√ß√£o**: Pacotes desatualizados detectados" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚úÖ Todos os pacotes est√£o na vers√£o mais recente" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Verificar depend√™ncias desatualizadas
        run: |
          echo "### Pacotes desatualizados" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          flutter pub outdated --no-dev-dependencies > outdated.txt || true
          cat outdated.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          
          # Contar depend√™ncias desatualizadas por tipo
          RESOLVABLE_COUNT=$(cat outdated.txt | grep -c "^[^!].*resolvable")
          RESOLVED_COUNT=$(cat outdated.txt | grep -c "^!.*")
          
          echo "Estat√≠sticas de depend√™ncias:" >> $GITHUB_STEP_SUMMARY
          echo "- Depend√™ncias que podem ser atualizadas: $RESOLVABLE_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "- Depend√™ncias desatualizadas com restri√ß√µes: $RESOLVED_COUNT" >> $GITHUB_STEP_SUMMARY
          
          if [ $RESOLVABLE_COUNT -gt 0 ]; then
            echo "‚ö†Ô∏è **Recomenda√ß√£o**: Execute 'flutter pub upgrade' para resolver $RESOLVABLE_COUNT depend√™ncias" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Verificar vulnerabilidades conhecidas
        run: |
          echo "### Verificando vulnerabilidades conhecidas" >> $GITHUB_STEP_SUMMARY
          
          # Lista de pacotes conhecidos com vulnerabilidades
          # (Esta √© uma lista de exemplo - mantenha atualizada com pacotes vulner√°veis)
          VULNERABLE_PACKAGES=(
            "http:<0.13.0:Vulnerabilidade de seguran√ßa com redirecionamentos"
            "crypto:<3.0.0:Vulnerabilidades criptogr√°ficas conhecidas"
            "shared_preferences:<2.0.0:Problemas de seguran√ßa no armazenamento"
            "url_launcher:<6.0.0:Vulnerabilidade de valida√ß√£o de URL"
            "webview_flutter:<2.0.0:Vulnerabilidades de seguran√ßa de WebView"
            "path_provider:<2.0.0:Problemas de seguran√ßa no acesso a arquivos"
          )
          
          VULNERABILITIES_FOUND=0
          HIGH_VULNERABILITIES=0
          
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "Analisando pubspec.lock para vulnerabilidades conhecidas:" >> $GITHUB_STEP_SUMMARY
          
          for package_info in "${VULNERABLE_PACKAGES[@]}"; do
            # Separar informa√ß√µes do pacote (nome:vers√£o:descri√ß√£o)
            IFS=':' read -r PKG_NAME PKG_VERSION PKG_DESCRIPTION <<< "$package_info"
            
            if grep -q "$PKG_NAME:" pubspec.lock; then
              CURRENT_VERSION=$(grep -A 3 "$PKG_NAME:" pubspec.lock | grep "version:" | sed 's/.*version: "\(.*\)".*/\1/')
              if [ ! -z "$CURRENT_VERSION" ]; then
                if [[ $PKG_VERSION == \<* ]]; then
                  # Remover o "<" para compara√ß√£o num√©rica
                  SAFE_VERSION=$(echo $PKG_VERSION | cut -c2-)
                  if [ "$(printf '%s\n' "$SAFE_VERSION" "$CURRENT_VERSION" | sort -V | head -n1)" = "$CURRENT_VERSION" ]; then
                    echo "‚ö†Ô∏è Vulnerabilidade: $PKG_NAME vers√£o $CURRENT_VERSION ($PKG_DESCRIPTION)" >> $GITHUB_STEP_SUMMARY
                    echo "   Recomenda√ß√£o: Atualizar para $SAFE_VERSION ou superior" >> $GITHUB_STEP_SUMMARY
                    VULNERABILITIES_FOUND=$((VULNERABILITIES_FOUND+1))
                    HIGH_VULNERABILITIES=$((HIGH_VULNERABILITIES+1))
                  fi
                fi
              fi
            fi
          done
          
          # Verificar pacotes de terceiros potencialmente inseguros
          SUSPICIOUS_PACKAGES=$(grep -l "verified: false" pubspec.lock || true)
          if [ ! -z "$SUSPICIOUS_PACKAGES" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "‚ö†Ô∏è Pacotes n√£o verificados pelo pub.dev (poss√≠vel risco de seguran√ßa):" >> $GITHUB_STEP_SUMMARY
            UNVERIFIED_COUNT=$(echo "$SUSPICIOUS_PACKAGES" | wc -l)
            VULNERABILITIES_FOUND=$((VULNERABILITIES_FOUND+UNVERIFIED_COUNT))
            
            for pkg in $SUSPICIOUS_PACKAGES; do
              PKG_NAME=$(basename "$pkg" .yaml)
              echo "- $PKG_NAME: N√£o verificado pelo pub.dev" >> $GITHUB_STEP_SUMMARY
            done
          fi
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          
          echo "Resumo de vulnerabilidades:" >> $GITHUB_STEP_SUMMARY
          echo "- Total: $VULNERABILITIES_FOUND" >> $GITHUB_STEP_SUMMARY
          echo "- Alta severidade: $HIGH_VULNERABILITIES" >> $GITHUB_STEP_SUMMARY
          
          if [ $HIGH_VULNERABILITIES -gt 0 ]; then
            echo "‚ö†Ô∏è **Alerta**: $HIGH_VULNERABILITIES vulnerabilidades de alta severidade encontradas!" >> $GITHUB_STEP_SUMMARY
            echo "Recomenda√ß√£o: Atualize os pacotes vulner√°veis imediatamente" >> $GITHUB_STEP_SUMMARY
          elif [ $VULNERABILITIES_FOUND -gt 0 ]; then
            echo "‚ö†Ô∏è **Aten√ß√£o**: $VULNERABILITIES_FOUND poss√≠veis vulnerabilidades encontradas" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚úÖ Nenhuma vulnerabilidade conhecida encontrada!" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Analisar qualidade de c√≥digo e seguran√ßa
        run: |
          echo "### Analisando qualidade de c√≥digo" >> $GITHUB_STEP_SUMMARY
          
          # Contar alertas de analisador Dart 
          flutter analyze --no-fatal-infos > analyze-report.txt || true
          
          # Contar alertas por tipo
          ERROR_COUNT=$(grep -c "error ‚Ä¢" analyze-report.txt || echo 0)
          WARNING_COUNT=$(grep -c "warning ‚Ä¢" analyze-report.txt || echo 0)
          INFO_COUNT=$(grep -c "info ‚Ä¢" analyze-report.txt || echo 0)
          
          echo "Resultados da an√°lise est√°tica:" >> $GITHUB_STEP_SUMMARY
          echo "- Erros: $ERROR_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "- Avisos: $WARNING_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "- Informa√ß√µes: $INFO_COUNT" >> $GITHUB_STEP_SUMMARY
          
          if [ $ERROR_COUNT -gt 0 ] || [ $WARNING_COUNT -gt 0 ]; then
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            cat analyze-report.txt | head -n 50 >> $GITHUB_STEP_SUMMARY
            if [ $(cat analyze-report.txt | wc -l) -gt 50 ]; then
              echo "... (sa√≠da truncada)" >> $GITHUB_STEP_SUMMARY
            fi
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚úÖ Nenhum erro ou aviso detectado na an√°lise est√°tica" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Verificar problemas de seguran√ßa comuns em c√≥digo Flutter/Dart
          SECURITY_PATTERNS=(
            "insecureRandomNumber"
            "usesSharedPreferencesWithoutEncryption"
            "WebView.*setJavaScriptEnabled.*true"
            "clearTextTraffic.*true"
            "usesCleartextTraffic.*true"
            "debuggable.*true"
            "setAllowFileAccess.*true"
          )
          
          SECURITY_ISSUES=0
          echo "### Verificando padr√µes de c√≥digo inseguros" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          for pattern in "${SECURITY_PATTERNS[@]}"; do
            FOUND=$(find lib -name "*.dart" -exec grep -l "$pattern" {} \; | wc -l)
            if [ $FOUND -gt 0 ]; then
              echo "‚ö†Ô∏è Encontrado poss√≠vel problema de seguran√ßa: $pattern em $FOUND arquivos" >> $GITHUB_STEP_SUMMARY
              SECURITY_ISSUES=$((SECURITY_ISSUES+FOUND))
            fi
          done
          
          if [ $SECURITY_ISSUES -eq 0 ]; then
            echo "‚úÖ Nenhum padr√£o de c√≥digo inseguro detectado" >> $GITHUB_STEP_SUMMARY
          fi
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      
      - name: Gerar relat√≥rio final
        run: |
          echo "### üìä Relat√≥rio Final de Seguran√ßa" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Este relat√≥rio identifica poss√≠veis vulnerabilidades e problemas de seguran√ßa no projeto Flutter." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### üìù Recomenda√ß√µes" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "1. **Mantenha depend√™ncias atualizadas** executando regularmente `flutter pub upgrade`" >> $GITHUB_STEP_SUMMARY
          echo "2. **Revise o uso de WebViews** para garantir configura√ß√µes seguras" >> $GITHUB_STEP_SUMMARY
          echo "3. **Use armazenamento seguro** como `flutter_secure_storage` para dados sens√≠veis" >> $GITHUB_STEP_SUMMARY
          echo "4. **Configure corretamente TLS/HTTPS** e evite tr√°fego n√£o criptografado" >> $GITHUB_STEP_SUMMARY
          echo "5. **Execute esta an√°lise de vulnerabilidade regularmente**" >> $GITHUB_STEP_SUMMARY